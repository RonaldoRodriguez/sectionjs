[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/sectionjs.js",
    "content": "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar SectionJS = /** @class */ (function () {\n    /**\n     * Constructor de la clase SectionJS.\n     * @param articleContainer Contenedor HTML donde se renderizarán los datos.\n     * @throws Error si el contenedor no es válido.\n     */\n    function SectionJS(articleContainer) {\n        // Plantilla para renderizar cada artículo\n        this.articleTemplate = null;\n        // Plantillas para los elementos de información (paginación, etc.)\n        this.infoTemplates = null;\n        // Datos cargados desde la fuente\n        this.data = null;\n        // Observador de cambios en los atributos del contenedor\n        this.observer = null;\n        // Indica si el observador está activo\n        this.observerActive = false;\n        if (!articleContainer) {\n            throw new Error(\"El contenedor proporcionado no es un elemento válido.\");\n        }\n        this.articleContainer = articleContainer;\n        // Inicializar elementos \"info\" y guardar sus plantillas\n        this.spanElements = __spreadArray(__spreadArray(__spreadArray([], Array.from(this.articleContainer.querySelectorAll('[data-action=\"info\"], [data-section-action=\"info\"]')), true), Array.from(document.querySelectorAll(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"][data-action=\\\"info\\\"], [data-target=\\\"\").concat(this.articleContainer.id, \"\\\"][data-section-action=\\\"info\\\"]\"))), true), Array.from(document.querySelectorAll(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"]\"))).flatMap(function (container) {\n            return Array.from(container.querySelectorAll('[data-action=\"info\"], [data-section-action=\"info\"]'));\n        }), true);\n        // Guardar una copia de cada elemento \"info\" como plantilla\n        this.infoTemplates = this.spanElements.map(function (element) { return element.cloneNode(true); });\n        // Asignar atributos del contenedor\n        this.dataSourceURL = articleContainer.getAttribute('data-section');\n        this.limit = this.validateNumber(articleContainer.getAttribute('data-limit'), 'data-limit');\n        this.order = articleContainer.getAttribute('data-order') || 'ASC';\n        this.start = this.validateNumber(articleContainer.getAttribute('data-start'), 'data-start') || 0;\n        this.orderBy = articleContainer.getAttribute('data-by');\n        this.total = this.validateNumber(articleContainer.getAttribute('data-total'), 'data-total');\n        this.defaultPage = Math.max(1, this.validateNumber(articleContainer.getAttribute('data-default-page'), 'data-default-page') || 1);\n        this.currentPage = this.defaultPage;\n        this.responsePath = articleContainer.getAttribute('data-response-path');\n        this.findKey = articleContainer.getAttribute('data-find');\n        // No activar el Observer por defecto\n    }\n    /**\n     * Activa el MutationObserver para detectar cambios en los atributos del contenedor.\n     */\n    SectionJS.prototype.enableObserver = function () {\n        var _this = this;\n        if (this.observerActive)\n            return;\n        var attributesToObserve = [\n            'data-find', 'data-limit', 'data-order', 'data-start', 'data-by',\n            'data-total', 'data-default-page', 'data-response-path', 'data-section'\n        ];\n        this.observer = new MutationObserver(function (mutationsList) {\n            for (var _i = 0, mutationsList_1 = mutationsList; _i < mutationsList_1.length; _i++) {\n                var mutation = mutationsList_1[_i];\n                if (mutation.type === 'attributes' && mutation.attributeName) {\n                    _this.handleAttrChange(mutation.attributeName);\n                }\n            }\n        });\n        this.observer.observe(this.articleContainer, {\n            attributes: true,\n            attributeFilter: attributesToObserve,\n            subtree: false\n        });\n        this.observerActive = true;\n    };\n    /**\n     * Desactiva el MutationObserver.\n     */\n    SectionJS.prototype.disableObserver = function () {\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = null;\n            this.observerActive = false;\n        }\n    };\n    /**\n     * Maneja cambios en los atributos detectados por el MutationObserver.\n     * @param attributeName Nombre del atributo que cambió.\n     */\n    SectionJS.prototype.handleAttrChange = function (attributeName) {\n        this.refresh(); // Simplemente refrescamos la sección\n    };\n    /**\n     * Valida que un valor sea un número válido.\n     * @param value Valor a validar.\n     * @param attributeName Nombre del atributo (para mensajes de error).\n     * @returns El número validado o null si no es válido.\n     */\n    SectionJS.prototype.validateNumber = function (value, attributeName) {\n        if (value === null || value === undefined || value === \"\")\n            return null;\n        var number = Number(value);\n        if (isNaN(number)) {\n            console.error(\"Error: El atributo \".concat(attributeName, \" debe ser un n\\u00FAmero.\"));\n            return null;\n        }\n        return number;\n    };\n    /**\n     * Carga los datos desde la fuente especificada en dataSourceURL.\n     * @returns Los datos cargados.\n     */\n    SectionJS.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, contentType, fullJsonData, filteredJsonData, textData, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.dataSourceURL)\n                            return [2 /*return*/, null];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, , 8]);\n                        return [4 /*yield*/, fetch(this.dataSourceURL)];\n                    case 2:\n                        response = _a.sent();\n                        if (!response.ok)\n                            throw new Error(\"Error: \".concat(response.status));\n                        contentType = response.headers.get(\"Content-Type\");\n                        if (!(contentType === null || contentType === void 0 ? void 0 : contentType.includes(\"application/json\"))) return [3 /*break*/, 4];\n                        return [4 /*yield*/, response.json()];\n                    case 3:\n                        fullJsonData = _a.sent();\n                        filteredJsonData = this.responsePath ? this.getValue(fullJsonData, this.responsePath) : fullJsonData;\n                        this.data = Array.isArray(filteredJsonData) ? filteredJsonData : [filteredJsonData];\n                        this.articleContainer.dispatchEvent(new CustomEvent('sectionjs:datachanged', { detail: { data: this.data } }));\n                        return [2 /*return*/, fullJsonData];\n                    case 4: return [4 /*yield*/, response.text()];\n                    case 5:\n                        textData = _a.sent();\n                        this.data = [textData];\n                        return [2 /*return*/, textData];\n                    case 6: return [3 /*break*/, 8];\n                    case 7:\n                        error_1 = _a.sent();\n                        console.error(error_1);\n                        this.articleContainer.innerHTML = \"<p>Error al cargar datos.</p>\";\n                        throw error_1;\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Busca un valor específico en los datos cargados.\n     * @param fullData Datos completos (opcional, si no se proporciona, se cargan automáticamente).\n     */\n    SectionJS.prototype.findKeyValue = function () {\n        return __awaiter(this, arguments, void 0, function (fullData) {\n            var findKey, defaultValue, value, error_2;\n            if (fullData === void 0) { fullData = null; }\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.articleContainer)\n                            return [2 /*return*/];\n                        findKey = this.articleContainer.getAttribute('data-find');\n                        defaultValue = this.articleContainer.getAttribute('data-find-default') || 'none';\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        if (!!fullData) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.load()];\n                    case 2:\n                        fullData = _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        if (findKey) {\n                            value = this.getValue(fullData, findKey) || defaultValue;\n                            this.articleContainer.setAttribute('data-find-value', value);\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_2 = _a.sent();\n                        console.error(\"Error en findValue:\", error_2);\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Actualiza los atributos de la instancia en función del contenedor.\n     */\n    SectionJS.prototype.updateAttrs = function () {\n        this.dataSourceURL = this.articleContainer.getAttribute('data-section');\n        this.limit = this.validateNumber(this.articleContainer.getAttribute('data-limit'), 'data-limit');\n        this.order = this.articleContainer.getAttribute('data-order') || 'ASC';\n        this.start = this.validateNumber(this.articleContainer.getAttribute('data-start'), 'data-start') || 0;\n        this.orderBy = this.articleContainer.getAttribute('data-by');\n        this.total = this.validateNumber(this.articleContainer.getAttribute('data-total'), 'data-total');\n        this.defaultPage = Math.max(1, this.validateNumber(this.articleContainer.getAttribute('data-default-page'), 'data-default-page') || 1);\n        this.responsePath = this.articleContainer.getAttribute('data-response-path');\n        this.findKey = this.articleContainer.getAttribute('data-find');\n    };\n    /**\n     * Obtiene los datos de una página específica.\n     * @param page Número de la página.\n     * @returns Los datos de la página.\n     */\n    SectionJS.prototype.getPage = function (page) {\n        var _this = this;\n        var _a, _b;\n        if (!this.data)\n            return [];\n        var dataToUse = this.data;\n        // Ordenar los datos si se especifica un orden\n        if (Array.isArray(dataToUse) && this.orderBy) {\n            dataToUse = dataToUse.slice().sort(function (a, b) {\n                var valueA = _this.getValue(a, _this.orderBy);\n                var valueB = _this.getValue(b, _this.orderBy);\n                return _this.order.toLowerCase() === 'asc' ? (valueA < valueB ? -1 : 1) : (valueA > valueB ? -1 : 1);\n            });\n        }\n        // Calcular índices de la página\n        var pageSize = (_a = this.limit) !== null && _a !== void 0 ? _a : dataToUse.length;\n        var startIndex = (page - 1) * pageSize + this.start;\n        var endIndex = Math.min(startIndex + pageSize, (_b = this.total) !== null && _b !== void 0 ? _b : dataToUse.length);\n        return dataToUse.slice(startIndex, endIndex);\n    };\n    /**\n     * Renderiza los datos en el contenedor.\n     * @param pageData Datos de la página a renderizar.\n     */\n    SectionJS.prototype.render = function (pageData) {\n        var _this = this;\n        if (!this.articleContainer)\n            return;\n        var elementosOrdenados = [];\n        var plantilla = null;\n        // Desactivar temporalmente el observer\n        var wasObserverActive = this.observerActive;\n        if (wasObserverActive) {\n            this.disableObserver();\n        }\n        // Recorrer los elementos hijos del contenedor\n        Array.from(this.articleContainer.children).forEach(function (elemento) {\n            var _a;\n            var element = elemento;\n            // Si el elemento es estático, lo agregamos al array de elementos ordenados\n            if (element.hasAttribute('data-section-static')) {\n                elementosOrdenados.push(element);\n                element.remove(); // Lo removemos temporalmente del contenedor\n            }\n            // Si el elemento es candidato a plantilla (el primero que no es estático o tiene data-section-render)\n            else if (element.hasAttribute('data-section-render') || !plantilla) {\n                if (!plantilla) {\n                    plantilla = element;\n                    _this.articleTemplate = (_a = _this.articleTemplate) !== null && _a !== void 0 ? _a : plantilla;\n                    if (!_this.articleTemplate || !(_this.articleTemplate instanceof HTMLElement)) {\n                        throw new Error(\"No se pudo encontrar una plantilla válida en el contenedor.\");\n                    }\n                    // Renderizar los datos usando la plantilla\n                    pageData.forEach(function (articleData) {\n                        var elementoRenderizado = _this.articleTemplate.cloneNode(true);\n                        elementoRenderizado.querySelectorAll('*').forEach(function (el) {\n                            _this.processText(el, articleData);\n                            _this.processAttrs(el, articleData);\n                            _this.assignSrc(el);\n                        });\n                        elementosOrdenados.push(elementoRenderizado);\n                    });\n                }\n                element.remove(); // Remover la plantilla original del contenedor\n            }\n            // Si el elemento no es estático ni plantilla, lo removemos\n            else {\n                element.remove();\n            }\n        });\n        // Agregar los elementos ordenados de vuelta al contenedor\n        elementosOrdenados.forEach(function (elemento) { return _this.articleContainer.appendChild(elemento); });\n        // Marcar el contenedor como renderizado\n        this.articleContainer.setAttribute('data-section-rendered', 'true');\n        // Reactivar el observer si estaba activo\n        if (wasObserverActive) {\n            this.enableObserver();\n        }\n        // Reconectar botones, actualizar info y botones\n        this.reconnectButtons();\n        this.updateInfo();\n        this.updateButtons();\n        // Disparar evento de renderizado\n        this.articleContainer.dispatchEvent(new CustomEvent('sectionjs:rendered', { detail: { pageData: pageData } }));\n    };\n    /**\n     * Reconecta los botones de paginación.\n     */\n    SectionJS.prototype.reconnectButtons = function () {\n        var _this = this;\n        if (!this.articleContainer)\n            return;\n        // Seleccionar botones dentro de contenedores estáticos o fuera del contenedor principal\n        var prevButtons = __spreadArray(__spreadArray([], Array.from(this.articleContainer.querySelectorAll('[data-section-static] [data-action=\"prev\"]')), true), Array.from(document.querySelectorAll(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"][data-action=\\\"prev\\\"]\"))), true).filter(function (button) { return button !== null; });\n        var nextButtons = __spreadArray(__spreadArray([], Array.from(this.articleContainer.querySelectorAll('[data-section-static] [data-action=\"next\"]')), true), Array.from(document.querySelectorAll(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"][data-action=\\\"next\\\"]\"))), true).filter(function (button) { return button !== null; });\n        // Asignar eventos a los botones\n        prevButtons.forEach(function (button) { return button.onclick = function () { return _this.paginate('prev'); }; });\n        nextButtons.forEach(function (button) { return button.onclick = function () { return _this.paginate('next'); }; });\n    };\n    /**\n     * Procesa el texto de un elemento y reemplaza las variables con los datos.\n     * @param element Elemento a procesar.\n     * @param data Datos a utilizar para el reemplazo.\n     */\n    SectionJS.prototype.processText = function (element, data) {\n        var _this = this;\n        Array.from(element.childNodes)\n            .filter(function (node) { return node.nodeType === Node.TEXT_NODE; })\n            .forEach(function (textNode) {\n            textNode.textContent = _this.replaceText(textNode.textContent || '', data);\n        });\n    };\n    /**\n     * Procesa los atributos de un elemento y reemplaza las variables con los datos.\n     * @param element Elemento a procesar.\n     * @param data Datos a utilizar para el reemplazo.\n     */\n    SectionJS.prototype.processAttrs = function (element, data) {\n        var _this = this;\n        Array.from(element.attributes).forEach(function (attr) {\n            element.setAttribute(attr.name, _this.replaceText(attr.value, data));\n        });\n    };\n    /**\n     * Asigna el atributo `src` a elementos multimedia (img, audio, video) si tienen `data-src`.\n     * @param element Elemento a procesar.\n     */\n    SectionJS.prototype.assignSrc = function (element) {\n        if (['IMG', 'AUDIO', 'VIDEO'].includes(element.tagName) && element.hasAttribute('data-src')) {\n            element.setAttribute('src', element.getAttribute('data-src'));\n        }\n    };\n    /**\n     * Reemplaza las variables en un texto con los valores correspondientes de los datos.\n     * @param text Texto a procesar.\n     * @param data Datos a utilizar para el reemplazo.\n     * @returns Texto con las variables reemplazadas.\n     */\n    SectionJS.prototype.replaceText = function (text, data) {\n        var _this = this;\n        return text.replace(/{{(.*?)}}/g, function (_, clave) { return _this.getValue(data, clave) || ''; });\n    };\n    /**\n     * Obtiene un valor de un objeto utilizando una clave en formato de ruta (ej: \"user.name\").\n     * @param obj Objeto del cual obtener el valor.\n     * @param key Clave en formato de ruta.\n     * @returns El valor encontrado o una cadena vacía si no existe.\n     */\n    SectionJS.prototype.getValue = function (obj, key) {\n        return key.split('.').reduce(function (value, k) { return (value && typeof value === 'object' ? value[k] : ''); }, obj);\n    };\n    /**\n     * Actualiza los elementos de información (paginación, etc.).\n     */\n    SectionJS.prototype.updateInfo = function () {\n        var _this = this;\n        var _a, _b, _c;\n        if (!this.articleContainer || !this.spanElements.length || !this.infoTemplates.length)\n            return;\n        var totalPages = Math.ceil((((_a = this.data) === null || _a === void 0 ? void 0 : _a.length) || 0) / (this.limit || ((_b = this.data) === null || _b === void 0 ? void 0 : _b.length) || 1));\n        var itemsTotal = ((_c = this.data) === null || _c === void 0 ? void 0 : _c.length) || 0;\n        var itemsNow = this.getPage(this.currentPage).length;\n        var firstItemIndex = (this.currentPage - 1) * (this.limit || 0) + 1;\n        var lastItemIndex = Math.min(firstItemIndex + (this.limit || 0) - 1, itemsTotal);\n        // Seleccionar elementos \"info\" dentro de contenedores estáticos o fuera del contenedor principal\n        var infoElements = __spreadArray(__spreadArray([], Array.from(this.articleContainer.querySelectorAll('[data-section-static] [data-action=\"info\"]')), true), Array.from(document.querySelectorAll(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"][data-action=\\\"info\\\"]\"))), true).filter(function (element) { return element !== null; });\n        // Actualizar el contenido de los elementos \"info\" usando sus propias plantillas\n        infoElements.forEach(function (infoElement, index) {\n            var templateElement = _this.infoTemplates ? _this.infoTemplates[index] : null;\n            var template = templateElement ? templateElement.textContent : null;\n            if (template) {\n                infoElement.textContent = template\n                    .replace('{{pageNow}}', _this.currentPage.toString())\n                    .replace('{{totalPages}}', totalPages.toString())\n                    .replace('{{itemsNow}}', itemsNow.toString())\n                    .replace('{{itemsTotal}}', itemsTotal.toString())\n                    .replace('{{firstItemIndex}}', firstItemIndex.toString())\n                    .replace('{{lastItemIndex}}', lastItemIndex.toString());\n            }\n        });\n    };\n    /**\n     * Actualiza el estado de los botones de paginación.\n     */\n    SectionJS.prototype.updateButtons = function () {\n        var _this = this;\n        var _a, _b;\n        if (!this.articleContainer)\n            return;\n        var totalPages = Math.ceil((((_a = this.data) === null || _a === void 0 ? void 0 : _a.length) || 0) / (this.limit || ((_b = this.data) === null || _b === void 0 ? void 0 : _b.length) || 1));\n        // Seleccionar botones dentro de contenedores estáticos o fuera del contenedor principal\n        var prevButtons = __spreadArray(__spreadArray([], Array.from(this.articleContainer.querySelectorAll('[data-section-static] [data-action=\"prev\"]')), true), Array.from(document.querySelectorAll(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"][data-action=\\\"prev\\\"]\"))), true).filter(function (button) { return button !== null; });\n        var nextButtons = __spreadArray(__spreadArray([], Array.from(this.articleContainer.querySelectorAll('[data-section-static] [data-action=\"next\"]')), true), Array.from(document.querySelectorAll(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"][data-action=\\\"next\\\"]\"))), true).filter(function (button) { return button !== null; });\n        // Actualizar el estado de los botones\n        prevButtons.forEach(function (button) { return button.disabled = _this.currentPage === 1; });\n        nextButtons.forEach(function (button) { return button.disabled = _this.currentPage === totalPages; });\n    };\n    /**\n     * Refresca la sección en función de los cambios en los atributos.\n     */\n    SectionJS.prototype.refresh = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentAttributes, totalPages;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!this.articleContainer)\n                            return [2 /*return*/];\n                        currentAttributes = {\n                            limit: this.limit,\n                            order: this.order,\n                            start: this.start,\n                            orderBy: this.orderBy,\n                            total: this.total,\n                            defaultPage: this.defaultPage,\n                            dataSourceURL: this.dataSourceURL,\n                            findKey: this.findKey\n                        };\n                        this.updateAttrs();\n                        if (!(currentAttributes.limit !== this.limit || currentAttributes.order !== this.order ||\n                            currentAttributes.start !== this.start || currentAttributes.orderBy !== this.orderBy ||\n                            currentAttributes.total !== this.total || currentAttributes.defaultPage !== this.defaultPage ||\n                            currentAttributes.dataSourceURL !== this.dataSourceURL || currentAttributes.findKey !== this.findKey)) return [3 /*break*/, 5];\n                        if (!(this.dataSourceURL && (currentAttributes.total !== this.total || currentAttributes.dataSourceURL !== this.dataSourceURL))) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.load()];\n                    case 1:\n                        _c.sent();\n                        _c.label = 2;\n                    case 2:\n                        if (!(currentAttributes.findKey !== this.findKey)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.findKeyValue()];\n                    case 3:\n                        _c.sent();\n                        _c.label = 4;\n                    case 4:\n                        if (currentAttributes.defaultPage !== this.defaultPage) {\n                            this.currentPage = this.defaultPage;\n                        }\n                        totalPages = Math.ceil((((_a = this.data) === null || _a === void 0 ? void 0 : _a.length) || 0) / (this.limit || ((_b = this.data) === null || _b === void 0 ? void 0 : _b.length) || 1));\n                        this.currentPage = Math.min(this.currentPage, totalPages);\n                        this.render(this.getPage(this.currentPage));\n                        _c.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Navega entre las páginas.\n     * @param action Acción a realizar ('prev' o 'next').\n     */\n    SectionJS.prototype.paginate = function (action) {\n        if (!this.articleContainer || !this.data)\n            return;\n        var totalPages = Math.ceil(this.data.length / (this.limit || this.data.length));\n        if (action === 'prev' && this.currentPage > 1) {\n            this.currentPage--;\n        }\n        else if (action === 'next' && this.currentPage < totalPages) {\n            this.currentPage++;\n        }\n        this.render(this.getPage(this.currentPage));\n    };\n    /**\n     * Agrega un listener para el evento 'sectionjs:getdata'.\n     */\n    SectionJS.prototype.addListener = function () {\n        var _this = this;\n        if (!this.articleContainer)\n            return;\n        this.articleContainer.addEventListener('sectionjs:getdata', function (event) {\n            var customEvent = event;\n            var data = customEvent.detail.data;\n            var value = data && _this.data ? _this.getValue(_this.data, data) : _this.data;\n            _this.articleContainer.dispatchEvent(new CustomEvent(\"sectionjs:getdata:\".concat(data || 'all'), { detail: { value: value } }));\n        });\n    };\n    /**\n     * Inicializa todas las instancias de SectionJS en la página.\n     */\n    SectionJS.initAll = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var articleContainers, _i, articleContainers_1, articleContainer, section;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        articleContainers = document.querySelectorAll('[data-section]');\n                        if (articleContainers.length === 0) {\n                            console.log(\"SectionJS: data-section no encontrado. SectionJS inactivo.\");\n                            return [2 /*return*/];\n                        }\n                        SectionJS.instances = [];\n                        _i = 0, articleContainers_1 = articleContainers;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < articleContainers_1.length)) return [3 /*break*/, 4];\n                        articleContainer = articleContainers_1[_i];\n                        section = new SectionJS(articleContainer);\n                        SectionJS.instances.push(section);\n                        return [4 /*yield*/, section.initSelf()];\n                    case 2:\n                        _a.sent(); // Inicializar cada instancia individualmente\n                        _a.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Inicializa la instancia actual de SectionJS.\n     */\n    SectionJS.prototype.initSelf = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var totalPages, hasRenderedArticles, paginationContainer, prevButton, nextButton;\n            var _this = this;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        this.addListener();\n                        return [4 /*yield*/, this.load()];\n                    case 1:\n                        _c.sent();\n                        return [4 /*yield*/, this.findKeyValue()];\n                    case 2:\n                        _c.sent();\n                        totalPages = Math.ceil((((_a = this.data) === null || _a === void 0 ? void 0 : _a.length) || 0) / (this.limit || ((_b = this.data) === null || _b === void 0 ? void 0 : _b.length) || 1));\n                        this.currentPage = Math.min(this.currentPage, totalPages);\n                        hasRenderedArticles = this.articleContainer.hasAttribute('data-section-rendered');\n                        if (!hasRenderedArticles) {\n                            this.render(this.getPage(this.currentPage));\n                        }\n                        paginationContainer = document.querySelector(\"[data-target=\\\"\".concat(this.articleContainer.id, \"\\\"]\"));\n                        prevButton = paginationContainer === null || paginationContainer === void 0 ? void 0 : paginationContainer.querySelector('button[data-action=\"prev\"]');\n                        nextButton = paginationContainer === null || paginationContainer === void 0 ? void 0 : paginationContainer.querySelector('button[data-action=\"next\"]');\n                        if (prevButton)\n                            prevButton.onclick = function () { return _this.paginate('prev'); };\n                        if (nextButton)\n                            nextButton.onclick = function () { return _this.paginate('next'); };\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Aplica un cambio en un atributo del contenedor y refresca la sección.\n     * @param containerId ID del contenedor.\n     * @param attributeName Nombre del atributo a cambiar.\n     * @param attributeValue Nuevo valor del atributo.\n     */\n    SectionJS.apply = function (containerId, attributeName, attributeValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var articleContainer, section, wasObserverActive, currentValue;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        articleContainer = document.getElementById(containerId);\n                        if (!articleContainer) return [3 /*break*/, 3];\n                        section = SectionJS.instances.find(function (instance) { return instance.articleContainer === articleContainer; });\n                        if (!section) return [3 /*break*/, 3];\n                        wasObserverActive = section.observerActive;\n                        if (wasObserverActive) {\n                            section.disableObserver(); // Desactivar el Observer solo si estaba activo\n                        }\n                        currentValue = section.articleContainer.getAttribute(attributeName);\n                        if (!(currentValue !== attributeValue.toString())) return [3 /*break*/, 2];\n                        section.articleContainer.setAttribute(attributeName, attributeValue.toString());\n                        return [4 /*yield*/, section.refresh()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (wasObserverActive) {\n                            section.enableObserver(); // Reactivar el Observer solo si estaba activo\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Cambia un atributo del contenedor y refresca la sección.\n     * @param attributeName Nombre del atributo a cambiar.\n     * @param attributeValue Nuevo valor del atributo.\n     */\n    SectionJS.prototype.setAttribute = function (attributeName, attributeValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var wasObserverActive, currentValue;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        wasObserverActive = this.observerActive;\n                        if (wasObserverActive) {\n                            this.disableObserver(); // Desactivar el Observer solo si estaba activo\n                        }\n                        currentValue = this.articleContainer.getAttribute(attributeName);\n                        if (!(currentValue !== attributeValue.toString())) return [3 /*break*/, 2];\n                        this.articleContainer.setAttribute(attributeName, attributeValue.toString());\n                        return [4 /*yield*/, this.refresh()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (wasObserverActive) {\n                            this.enableObserver(); // Reactivar el Observer solo si estaba activo\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Lista de todas las instancias de SectionJS creadas\n    SectionJS.instances = [];\n    return SectionJS;\n}());\n",
    "static": true,
    "longname": "C:/Users/ronal/OneDrive/Escritorio/sectionjs/src/sectionjs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "__awaiter",
    "memberof": "src/sectionjs.js",
    "static": true,
    "longname": "src/sectionjs.js~__awaiter",
    "access": "private",
    "export": false,
    "importPath": "sectionjs/src/sectionjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "__generator",
    "memberof": "src/sectionjs.js",
    "static": true,
    "longname": "src/sectionjs.js~__generator",
    "access": "private",
    "export": false,
    "importPath": "sectionjs/src/sectionjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "__spreadArray",
    "memberof": "src/sectionjs.js",
    "static": true,
    "longname": "src/sectionjs.js~__spreadArray",
    "access": "private",
    "export": false,
    "importPath": "sectionjs/src/sectionjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "SectionJS",
    "memberof": "src/sectionjs.js",
    "static": true,
    "longname": "src/sectionjs.js~SectionJS",
    "access": "public",
    "export": false,
    "importPath": "sectionjs/src/sectionjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Documentación de la Clase `SectionJS`\r\n\r\nLa clase `SectionJS` es una herramienta diseñada para gestionar y renderizar secciones dinámicas en una página web. Permite cargar datos desde una fuente externa, paginar los datos, y actualizar la interfaz de usuario en función de los cambios en los atributos del contenedor. A continuación se detalla la funcionalidad y uso de esta clase.\r\n\r\n---\r\n\r\n## Índice\r\n\r\n1. [Introducción](#introducción)\r\n2. [Instalación y Uso](#instalación-y-uso)\r\n3. [Propiedades](#propiedades)\r\n4. [Métodos](#métodos)\r\n   - [Constructor](#constructor)\r\n   - [enableObserver](#enableobserver)\r\n   - [disableObserver](#disableobserver)\r\n   - [refresh](#refresh)\r\n   - [initAll](#initall)\r\n   - [initSelf](#initself)\r\n   - [apply](#apply)\r\n   - [setAttribute](#setattribute)\r\n5. [Eventos](#eventos)\r\n6. [Ejemplos de Uso](#ejemplos-de-uso)\r\n7. [Consideraciones](#consideraciones)\r\n\r\n---\r\n\r\n## Introducción\r\n\r\n`SectionJS` es una clase que facilita la creación de secciones dinámicas en una página web. Permite cargar datos desde una URL, paginarlos, y renderizarlos en un contenedor HTML. Además, incluye funcionalidades como la detección de cambios en los atributos del contenedor y la actualización automática de la interfaz.\r\n\r\n---\r\n\r\n## Instalación y Uso\r\n\r\nPara utilizar `SectionJS`, simplemente incluye el archivo JavaScript que contiene la clase en tu proyecto y sigue los pasos a continuación:\r\n\r\n1. **Estructura HTML**: Asegúrate de tener un contenedor con el atributo `data-section` que apunte a la URL de los datos.\r\n\r\n   ```html\r\n   <div id=\"mySection\" data-section=\"https://api.example.com/data\"></div>\r\n   ```\r\n\r\n2. **Inicialización**: Inicializa `SectionJS` llamando al método `initAll`.\r\n\r\n   ```javascript\r\n   SectionJS.initAll();\r\n   ```\r\n\r\n3. **Personalización**: Puedes modificar los atributos del contenedor para cambiar el comportamiento de la sección (paginación, ordenamiento, etc.).\r\n\r\n---\r\n\r\n## Propiedades\r\n\r\n| Propiedad               | Tipo                     | Descripción                                                                 |\r\n|-------------------------|--------------------------|-----------------------------------------------------------------------------|\r\n| `instances`             | `SectionJS[]`            | Lista de todas las instancias de `SectionJS` creadas.                       |\r\n| `articleContainer`       | `HTMLElement`            | Contenedor HTML donde se renderizarán los datos.                            |\r\n| `articleTemplate`        | `Element \\| null`        | Plantilla para renderizar cada artículo.                                    |\r\n| `infoTemplates`          | `Element[] \\| null`      | Plantillas para los elementos de información (paginación, etc.).            |\r\n| `spanElements`           | `Element[]`              | Elementos que muestran información adicional (paginación, etc.).            |\r\n| `dataSourceURL`          | `string \\| null`         | URL de la fuente de datos.                                                  |\r\n| `limit`                  | `number \\| null`         | Número máximo de elementos por página.                                      |\r\n| `order`                  | `string`                 | Orden de los datos (`ASC` o `DESC`).                                        |\r\n| `start`                  | `number`                 | Índice de inicio para la paginación.                                        |\r\n| `orderBy`                | `string \\| null`         | Atributo por el cual ordenar los datos.                                     |\r\n| `total`                  | `number \\| null`         | Número total de elementos.                                                  |\r\n| `defaultPage`            | `number`                 | Página por defecto al cargar la sección.                                    |\r\n| `currentPage`            | `number`                 | Página actual.                                                              |\r\n| `data`                   | `any[] \\| null`          | Datos cargados desde la fuente.                                             |\r\n| `responsePath`           | `string \\| null`         | Ruta dentro del JSON de respuesta para obtener los datos.                   |\r\n| `findKey`                | `string \\| null`         | Clave para buscar un valor específico en los datos.                         |\r\n| `observer`               | `MutationObserver \\| null` | Observador de cambios en los atributos del contenedor.                     |\r\n| `observerActive`         | `boolean`                | Indica si el observador está activo.                                        |\r\n\r\n---\r\n\r\n## Métodos\r\n\r\n### Constructor\r\n\r\n```typescript\r\nconstructor(articleContainer: HTMLElement)\r\n```\r\n\r\nInicializa una nueva instancia de `SectionJS`.\r\n\r\n- **Parámetros**:\r\n  - `articleContainer`: Contenedor HTML donde se renderizarán los datos.\r\n\r\n---\r\n\r\n### enableObserver\r\n\r\n```typescript\r\npublic enableObserver(): void\r\n```\r\n\r\nActiva el `MutationObserver` para detectar cambios en los atributos del contenedor.\r\n\r\n---\r\n\r\n### disableObserver\r\n\r\n```typescript\r\npublic disableObserver(): void\r\n```\r\n\r\nDesactiva el `MutationObserver`.\r\n\r\n---\r\n\r\n### refresh\r\n\r\n```typescript\r\nprivate async refresh(): Promise<void>\r\n```\r\n\r\nActualiza la sección en función de los cambios en los atributos del contenedor.\r\n\r\n---\r\n\r\n### initAll\r\n\r\n```typescript\r\npublic static async initAll(): Promise<void>\r\n```\r\n\r\nInicializa todas las instancias de `SectionJS` en la página.\r\n\r\n---\r\n\r\n### initSelf\r\n\r\n```typescript\r\npublic async initSelf(): Promise<void>\r\n```\r\n\r\nInicializa la instancia actual de `SectionJS`.\r\n\r\n---\r\n\r\n### apply\r\n\r\n```typescript\r\npublic static async apply(containerId: string, attributeName: string, attributeValue: string | number): Promise<void>\r\n```\r\n\r\nAplica un cambio en un atributo del contenedor y refresca la sección.\r\n\r\n- **Parámetros**:\r\n  - `containerId`: ID del contenedor.\r\n  - `attributeName`: Nombre del atributo a cambiar.\r\n  - `attributeValue`: Nuevo valor del atributo.\r\n\r\n---\r\n\r\n### setAttribute\r\n\r\n```typescript\r\npublic async setAttribute(attributeName: string, attributeValue: string | number): Promise<void>\r\n```\r\n\r\nCambia un atributo del contenedor y refresca la sección.\r\n\r\n- **Parámetros**:\r\n  - `attributeName`: Nombre del atributo a cambiar.\r\n  - `attributeValue`: Nuevo valor del atributo.\r\n\r\n---\r\n\r\n## Eventos\r\n\r\n| Evento                  | Descripción                                                                 |\r\n|-------------------------|-----------------------------------------------------------------------------|\r\n| `sectionjs:datachanged`  | Se dispara cuando los datos han cambiado.                                   |\r\n| `sectionjs:rendered`     | Se dispara cuando la sección ha sido renderizada.                           |\r\n| `sectionjs:getdata`      | Se dispara para obtener datos específicos de la sección.                    |\r\n\r\n---\r\n\r\n## Ejemplos de Uso\r\n\r\n### Ejemplo 1: Inicialización Básica\r\n\r\n```html\r\n<div id=\"mySection\" data-section=\"https://api.example.com/data\"></div>\r\n<script>\r\n  SectionJS.initAll();\r\n</script>\r\n```\r\n\r\n### Ejemplo 2: Cambiar un Atributo Dinámicamente\r\n\r\n```javascript\r\nSectionJS.apply('mySection', 'data-limit', 10);\r\n```\r\n\r\n### Ejemplo 3: Escuchar Eventos\r\n\r\n```javascript\r\ndocument.getElementById('mySection').addEventListener('sectionjs:rendered', (event) => {\r\n  console.log('Sección renderizada:', event.detail.pageData);\r\n});\r\n```\r\n\r\n---\r\n\r\n## Consideraciones\r\n\r\n- **Compatibilidad**: Asegúrate de que tu navegador soporte `MutationObserver` y `fetch`.\r\n- **Rendimiento**: Evita cambios frecuentes en los atributos del contenedor para optimizar el rendimiento.\r\n- **Manejo de Errores**: Implementa manejo de errores personalizado si es necesario.\r\n\r\n---\r\n\r\nEsta documentación proporciona una visión general de la clase `SectionJS`. Para más detalles, consulta el código fuente y los comentarios incluidos en él.",
    "longname": "C:\\Users\\ronal\\OneDrive\\Escritorio\\sectionjs\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n    \"name\": \"sectionjs\",\r\n    \"version\": \"1.0.0\",\r\n    \"description\": \"Una librería JavaScript para renderizar contenido dinámicamente desde una fuente de datos.\",\r\n    \"main\": \"dist/sectionjs.min.js\",\r\n    \"scripts\": {\r\n        \"clean\": \"rimraf build dist docs out\",\r\n        \"build:ts\": \"tsc\",\r\n        \"build:terser\": \"terser build/sectionjs.js -o dist/sectionjs.min.js --toplevel --compress drop_console=true,dead_code=true --mangle reserved=['initAll','initSelf','setAttribute','paginate','render','refresh','load','findKeyValue','enableObserver','disableObserver'] --keep-classnames --ie8 --safari10\",\r\n        \"build\": \"npm run clean && npm run build:ts && npm run build:terser\",\r\n        \"watch\": \"tsc --watch\"\r\n    },\r\n    \"keywords\": [\r\n        \"javascript\",\r\n        \"render\",\r\n        \"dynamic\",\r\n        \"data\",\r\n        \"pagination\"\r\n    ],\r\n    \"author\": \"Ronaldo José Rodríguez Urbaneja\",\r\n    \"license\": \"AGPL-3.0\",\r\n    \"devDependencies\": {\r\n        \"esdoc\": \"^1.1.0\",\r\n        \"esdoc-standard-plugin\": \"^1.0.0\",\r\n        \"rimraf\": \"^6.0.1\",\r\n        \"terser\": \"^5.16.1\",\r\n        \"terser-webpack-plugin\": \"^5.3.9\",\r\n        \"ts-loader\": \"^9.5.2\",\r\n        \"typescript\": \"^5.3.3\",\r\n        \"webpack\": \"^5.88.2\",\r\n        \"webpack-cli\": \"^5.1.4\"\r\n    }\r\n}\r\n",
    "longname": "C:\\Users\\ronal\\OneDrive\\Escritorio\\sectionjs\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]